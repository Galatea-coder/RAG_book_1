Sequence of operations for a task Algorithms redirects here. For the subfield of computer science see Analysis of algorithms . For other uses see Algorithm disambiguation . This article has multiple issues. Please help improve it or discuss these issues on the talk page .  Learn how and when to remove these messages  This article may require copy editing for grammar style cohesion tone or spelling . You can assist by editing it .  April 2024   Learn how and when to remove this message  This article is written like a personal reflection personal essay or argumentative essay that states a Wikipedia editors personal feelings or presents an original argument about a topic. Please help improve it by rewriting it in an encyclopedic style .  April 2024   Learn how and when to remove this message   Learn how and when to remove this message  Flowchart of using successive subtractions to find the greatest common divisor of number r and s In mathematics and computer science  an algorithm   ˈ æ l ɡ ə r ɪ ð əm    is a finite sequence of mathematically rigorous instructions typically used to solve a class of specific problems or to perform a computation .  1  Algorithms are used as specifications for performing calculations and data processing . More advanced algorithms can use conditionals to divert the code execution through various routes referred to as automated decisionmaking  and deduce valid inferences referred to as automated reasoning . In contrast a heuristic is an approach to solving problems that do not have welldefined correct or optimal results.  2  For example although social media recommender systems are commonly called algorithms they actually rely on heuristics as there is no truly correct recommendation. As an effective method  an algorithm can be expressed within a finite amount of space and time  3  and in a welldefined formal language  4  for calculating a function .  5  Starting from an initial state and initial input perhaps empty   6  the instructions describe a computation that when executed  proceeds through a finite  7  number of welldefined successive states eventually producing output  8  and terminating at a final ending state. The transition from one state to the next is not necessarily deterministic  some algorithms known as randomized algorithms  incorporate random input.  9  Etymology  edit  Around 825 AD Persian scientist and polymath Muḥammad ibn Mūsā alKhwārizmī wrote kitāb alḥisāb alhindī Book of Indian computation and kitab aljam waltafriq alḥisāb alhindī Addition and subtraction in Indian arithmetic.  1  In the early 12th century Latin translations of said alKhwarizmi texts involving the HinduArabic numeral system and arithmetic appeared for example Liber Alghoarismi de practica arismetrice  attributed to John of Seville  and Liber Algorismi de numero Indorum  attributed to Adelard of Bath .  10  Hereby alghoarismi or algorismi is the Latinization of AlKhwarizmis name the text starts with the phrase Dixit Algorismi  or Thus spoke AlKhwarizmi.  2  Around 1230 the English word algorism is attested and then by Chaucer in 1391 English adopted the French term.  3   4   clarification needed  In the 15th century under the influence of the Greek word ἀριθμός  arithmos  number cf. arithmetic the Latin word was altered to algorithmus .  citation needed  Definition  edit  For a detailed presentation of the various points of view on the definition of algorithm see Algorithm characterizations . One informal definition is a set of rules that precisely defines a sequence of operations  11   need quotation to verify  which would include all computer programs including programs that do not perform numeric calculations and any prescribed bureaucratic procedure  12  or cookbook recipe .  13  In general a program is an algorithm only if it stops eventually  14  even though infinite loops may sometimes prove desirable. Boolos Jeffrey  1974 1999 define an algorithm to be an explicit set of instructions for determining an output that can be followed by a computing machine or a human who could only carry out specific elementary operations on symbols .  15  Most algorithms are intended to be implemented as computer programs . However algorithms are also implemented by other means such as in a biological neural network for example the human brain performing arithmetic or an insect looking for food in an electrical circuit  or a mechanical device. History  edit  This section is missing information about 20th and 21st century development of computer algorithms. Please expand the section to include this information. Further details may exist on the talk page .  October 2023  Ancient algorithms  edit  Stepbystep procedures for solving mathematical problems have been recorded since antiquity. This includes in Babylonian mathematics around 2500 BC  16  Egyptian mathematics around 1550 BC  16  Indian mathematics around 800 BC and later  17   18  the Ifa Oracle around 500 BC  19  Greek mathematics around 240 BC  20  Chinese mathematics around 200 BC and later   21  and Arabic mathematics around 800 AD.  22  The earliest evidence of algorithms is found in ancient Mesopotamian mathematics. A Sumerian clay tablet found in Shuruppak near Baghdad and dated to c. 2500 BC describes the earliest division algorithm .  16  During the Hammurabi dynasty c. 1800  c. 1600 BC  Babylonian clay tablets described algorithms for computing formulas.  23  Algorithms were also used in Babylonian astronomy . Babylonian clay tablets describe and employ algorithmic procedures to compute the time and place of significant astronomical events.  24  Algorithms for arithmetic are also found in ancient Egyptian mathematics  dating back to the Rhind Mathematical Papyrus c. 1550 BC .  16  Algorithms were later used in ancient Hellenistic mathematics . Two examples are the Sieve of Eratosthenes  which was described in the Introduction to Arithmetic by Nicomachus   25   20   Ch 9.2 and the Euclidean algorithm  which was first described in Euclids Elements  c. 300 BC .  20   Ch 9.1 Examples of ancient Indian mathematics included the Shulba Sutras  the Kerala School  and the Brāhmasphuṭasiddhānta .  17  The first cryptographic algorithm for deciphering encrypted code was developed by AlKindi  a 9thcentury Arab mathematician in A Manuscript On Deciphering Cryptographic Messages . He gave the first description of cryptanalysis by frequency analysis  the earliest codebreaking algorithm.  22  Computers  edit  Weightdriven clocks  edit  Bolter credits the invention of the weightdriven clock as the key invention of Europe in the Middle Ages  specifically the verge escapement mechanism  26  producing the tick and tock of a mechanical clock. The accurate automatic machine  27  led immediately to mechanical automata  in the 13th century and computational machinesthe difference and analytical engines of Charles Babbage and Ada Lovelace in the mid19th century.  28  Lovelace designed the first algorithm intended for processing on a computer Babbages analytical engine which is the first device considered a real Turingcomplete computer instead of just a calculator . Although a full implementation of Babbages second device was not realized for decades after her lifetime Lovelace has been called historys first programmer. Electromechanical relay  edit  Bell and Newell 1971 write that the Jacquard loom  a precursor to Hollerith cards punch cards and telephone switching technologies led to the development of the first computers.  29  By the mid19th century the telegraph  the precursor of the telephone was in use throughout the world. By the late 19th century the ticker tape  c. 1870s  was in use as were Hollerith cards c. 1890. Then came the teleprinter  c. 1910  with its punchedpaper use of Baudot code on tape. Telephoneswitching networks of electromechanical relays were invented in 1835. These led to the invention of the digital adding device by George Stibitz in 1937. While working in Bell Laboratories he observed the burdensome use of mechanical calculators with gears. He went home one evening in 1937 intending to test his idea... When the tinkering was over Stibitz had constructed a binary adding device.  30   31  Formalization  edit  Ada Lovelace s diagram from  Note G  the first published computer algorithm In 1928 a partial formalization of the modern concept of algorithms began with attempts to solve the Entscheidungsproblem decision problem posed by David Hilbert . Later formalizations were framed as attempts to define  effective calculability   32  or effective method.  33  Those formalizations included the Gödel  Herbrand  Kleene recursive functions of 1930 1934 and 1935 Alonzo Church s lambda calculus of 1936 Emil Post s Formulation 1 of 1936 and Alan Turing s Turing machines of 193637 and 1939. Representations  edit  Algorithms can be expressed in many kinds of notation including natural languages  pseudocode  flowcharts  drakoncharts  programming languages or control tables processed by interpreters . Natural language expressions of algorithms tend to be verbose and ambiguous and are rarely used for complex or technical algorithms. Pseudocode flowcharts drakoncharts and control tables are structured expressions of algorithms that avoid common ambiguities of natural language. Programming languages are primarily for expressing algorithms in a computerexecutable form but are also used to define or document algorithms. Turing machines  edit  There are many possible representations and Turing machine programs can be expressed as a sequence of machine tables see finitestate machine  statetransition table  and control table for more as flowcharts and drakoncharts see state diagram for more as a form of rudimentary machine code or assembly code called sets of quadruples and more. Algorithm representations can also be classified into three accepted levels of Turing machine description highlevel description implementation description and formal description.  34  A highlevel description describes qualities of the algorithm itself ignoring how it is implemented on the Turing machine.  34  An implementation description describes the general manner in which the machine moves its head and stores data in order to carry out the algorithm but does not give exact states.  34  In the most detail a formal description gives the exact state table and list of transitions of the Turing machine.  34  Flowchart representation  edit  The graphical aid called a flowchart offers a way to describe and document an algorithm and a computer program corresponding to it. It has four primary symbols arrows showing program flow rectangles SEQUENCE GOTO diamonds IFTHENELSE and dots ORtie. Substructures can nest in rectangles but only if a single exit occurs from the superstructure. Algorithmic analysis  edit  Main article Analysis of algorithms It is often important to know how much time storage or other cost an algorithm may require. Methods have been developed for the analysis of algorithms to obtain such quantitative answers estimates for example an algorithm that adds up the elements of a list of n numbers would have a time requirement of  O  n  displaystyle On   using big O notation . The algorithm only needs to remember two values the sum of all the elements so far and its current position in the input list. If the space required to store the input numbers is not counted it has a space requirement of  O  1  displaystyle O1   otherwise  O  n  displaystyle On  is required. Different algorithms may complete the same task with a different set of instructions in less or more time space or  effort  than others. For example a binary search algorithm with cost  O  log  n  displaystyle Olog n   outperforms a sequential search cost  O  n  displaystyle On   when used for table lookups on sorted lists or arrays. Formal versus empirical  edit  Main articles Empirical algorithmics  Profiling computer programming  and Program optimization The analysis and study of algorithms is a discipline of computer science . Algorithms are often studied abstractly without referencing any specific programming language or implementation. Algorithm analysis resembles other mathematical disciplines as it focuses on the algorithms properties not implementation. Pseudocode is typical for analysis as it is a simple and general representation. Most algorithms are implemented on particular hardwaresoftware platforms and their algorithmic efficiency is tested using real code. The efficiency of a particular algorithm may be insignificant for many oneoff problems but it may be critical for algorithms designed for fast interactive commercial or long life scientific usage. Scaling from small n to large n frequently exposes inefficient algorithms that are otherwise benign. Empirical testing is useful for uncovering unexpected interactions that affect performance. Benchmarks may be used to compare beforeafter potential improvements to an algorithm after program optimization.
Empirical tests cannot replace formal analysis though and are nontrivial to perform fairly.  35  Execution efficiency  edit  Main article Algorithmic efficiency To illustrate the potential improvements possible even in wellestablished algorithms a recent significant innovation relating to FFT algorithms used heavily in the field of image processing can decrease processing time up to 1000 times for applications like medical imaging.  36  In general speed improvements depend on special properties of the problem which are very common in practical applications.  37  Speedups of this magnitude enable computing devices that make extensive use of image processing like digital cameras and medical equipment to consume less power. Design  edit  See also Algorithm  By design paradigm Algorithm design is a method or mathematical process for problemsolving and engineering algorithms. The design of algorithms is part of many solution theories such as divideandconquer or dynamic programming within operation research . Techniques for designing and implementing algorithm designs are also called algorithm design patterns  38  with examples including the template method pattern and the decorator pattern. One of the most important aspects of algorithm design is resource runtime memory usage efficiency the big O notation is used to describe e.g. an algorithms runtime growth as the size of its input increases.  39  Structured programming  edit  Per the ChurchTuring thesis  any algorithm can be computed by any Turing complete model. Turing completeness only requires four instruction typesconditional GOTO unconditional GOTO assignment HALT. However Kemeny and Kurtz observe that while undisciplined use of unconditional GOTOs and conditional IFTHEN GOTOs can result in  spaghetti code  a programmer can write structured programs using only these instructions on the other hand it is also possible and not too hard to write badly structured programs in a structured language.  40  Tausworthe augments the three BöhmJacopini canonical structures   41  SEQUENCE IFTHENELSE and WHILEDO with two more DOWHILE and CASE.  42  An additional benefit of a structured program is that it lends itself to proofs of correctness using mathematical induction .  43  Legal status  edit  See also Software patent By themselves algorithms are not usually patentable. In the United States a claim consisting solely of simple manipulations of abstract concepts numbers or signals does not constitute processes USPTO 2006 so algorithms are not patentable as in Gottschalk v. Benson . However practical applications of algorithms are sometimes patentable. For example in Diamond v. Diehr  the application of a simple feedback algorithm to aid in the curing of synthetic rubber was deemed patentable. The patenting of software is controversial  44  and there are criticized patents involving algorithms especially data compression algorithms such as Unisys s LZW patent . Additionally some cryptographic algorithms have export restrictions see export of cryptography . Classification  edit  By implementation  edit  Recursion A recursive algorithm invokes itself repeatedly until meeting a termination condition and is a common functional programming method. Iterative algorithms use repetitions such as loops or data structures like stacks to solve problems. Problems may be suited for one implementation or the other. The Tower of Hanoi is a puzzle commonly solved using recursive implementation. Every recursive version has an equivalent but possibly more or less complex iterative version and vice versa. Serial parallel or distributed Algorithms are usually discussed with the assumption that computers execute one instruction of an algorithm at a time on serial computers. Serial algorithms are designed for these environments unlike parallel or distributed algorithms. Parallel algorithms take advantage of computer architectures where multiple processors can work on a problem at the same time. Distributed algorithms use multiple machines connected via a computer network. Parallel and distributed algorithms divide the problem into subproblems and collect the results back together. Resource consumption in these algorithms is not only processor cycles on each processor but also the communication overhead between the processors. Some sorting algorithms can be parallelized efficiently but their communication overhead is expensive. Iterative algorithms are generally parallelizable but some problems have no parallel algorithms and are called inherently serial problems. Deterministic or nondeterministic Deterministic algorithms solve the problem with exact decision at every step whereas nondeterministic algorithms solve problems via guessing. Guesses are typically made more accurate through the use of heuristics . Exact or approximate While many algorithms reach an exact solution approximation algorithms seek an approximation that is close to the true solution. Such algorithms have practical value for many hard problems. For example the Knapsack problem  where there is a set of items and the goal is to pack the knapsack to get the maximum total value. Each item has some weight and some value. The total weight that can be carried is no more than some fixed number X. So the solution must consider weights of items as well as their value.  45  Quantum algorithm Quantum algorithms run on a realistic model of quantum computation . The term is usually used for those algorithms which seem inherently quantum or use some essential feature of Quantum computing such as quantum superposition or quantum entanglement . By design paradigm  edit  Another way of classifying algorithms is by their design methodology or paradigm . Some common paradigms are Bruteforce or exhaustive search Brute force is a problemsolving method of systematically trying every possible option until the optimal solution is found. This approach can be very timeconsuming testing every possible combination of variables. It is often used when other methods are unavailable or too complex. Brute force can solve a variety of problems including finding the shortest path between two points and cracking passwords. Divide and conquer A divideandconquer algorithm repeatedly reduces a problem to one or more smaller instances of itself usually recursively  until the instances are small enough to solve easily. Merge sorting is an example of divide and conquer where an unordered list can be divided into segments containing one item and sorting of entire list can be obtained by merging the segments. A simpler variant of divide and conquer is called a decreaseandconquer algorithm  which solves one smaller instance of itself and uses the solution to solve the bigger problem. Divide and conquer divides the problem into multiple subproblems and so the conquer stage is more complex than decrease and conquer algorithms.  citation needed  An example of a decrease and conquer algorithm is the binary search algorithm . Search and enumeration Many problems such as playing chess  can be modelled as problems on graphs . A graph exploration algorithm specifies rules for moving around a graph and is useful for such problems. This category also includes search algorithms  branch and bound enumeration and backtracking . Randomized algorithm Such algorithms make some choices randomly or pseudorandomly. They find approximate solutions when finding exact solutions may be impractical see heuristic method below. For some problems the fastest approximations must involve some randomness .  46  Whether randomized algorithms with polynomial time complexity can be the fastest algorithm for some problems is an open question known as the P versus NP problem . There are two large classes of such algorithms Monte Carlo algorithms return a correct answer with high probability. E.g. RP is the subclass of these that run in polynomial time . Las Vegas algorithms always return the correct answer but their running time is only probabilistically bound e.g. ZPP . Reduction of complexity This technique transforms difficult problems into betterknown problems solvable with hopefully asymptotically optimal algorithms. The goal is to find a reducing algorithm whose complexity is not dominated by the resulting reduced algorithms. For example one selection algorithm finds the median of an unsorted list by first sorting the list the expensive portion then pulling out the middle element in the sorted list the cheap portion. This technique is also known as transform and conquer . Back tracking In this approach multiple solutions are built incrementally and abandoned when it is determined that they cannot lead to a valid full solution. Optimization problems  edit  For optimization problems there is a more specific classification of algorithms an algorithm for such problems may fall into one or more of the general categories described above as well as into one of the following Linear programming When searching for optimal solutions to a linear function bound by linear equality and inequality constraints the constraints can be used directly to produce optimal solutions. There are algorithms that can solve any problem in this category such as the popular simplex algorithm .  47  Problems that can be solved with linear programming include the maximum flow problem for directed graphs. If a problem also requires that any of the unknowns be integers  then it is classified in integer programming . A linear programming algorithm can solve such a problem if it can be proved that all restrictions for integer values are superficial i.e. the solutions satisfy these restrictions anyway. In the general case a specialized algorithm or an algorithm that finds approximate solutions is used depending on the difficulty of the problem. Dynamic programming When a problem shows optimal substructuresmeaning the optimal solution can be constructed from optimal solutions to subproblemsand overlapping subproblems  meaning the same subproblems are used to solve many different problem instances a quicker approach called dynamic programming avoids recomputing solutions. For example FloydWarshall algorithm  the shortest path between a start and goal vertex in a weighted graph can be found using the shortest path to the goal from all adjacent vertices. Dynamic programming and memoization go together. Unlike divide and conquer dynamic programming subproblems often overlap. The difference between dynamic programming and simple recursion is the caching or memoization of recursive calls. When subproblems are independent and do not repeat memoization does not help hence dynamic programming is not applicable to all complex problems. Using memoization dynamic programming reduces the complexity of many problems from exponential to polynomial. The greedy method Greedy algorithms  similarly to a dynamic programming work by examining substructures in this case not of the problem but of a given solution. Such algorithms start with some solution and improve it by making small modifications. For some problems they always find the optimal solution but for others they may stop at local optima . The most popular use of greedy algorithms is finding minimal spanning trees of graphs without negative cycles. Huffman Tree  Kruskal  Prim  Sollin are greedy algorithms that can solve this optimization problem. The heuristic method In optimization problems  heuristic algorithms find solutions close to the optimal solution when finding the optimal solution is impractical. These algorithms get closer and closer to the optimal solution as they progress. In principle if run for an infinite amount of time they will find the optimal solution. They can ideally find a solution very close to the optimal solution in a relatively short time. These algorithms include local search  tabu search  simulated annealing  and genetic algorithms . Some like simulated annealing are nondeterministic algorithms while others like tabu search are deterministic. When a bound on the error of the nonoptimal solution is known the algorithm is further categorized as an approximation algorithm . Examples  edit  Further information List of algorithms One of the simplest algorithms finds the largest number in a list of numbers of random order. Finding the solution requires looking at every number in the list. From this follows a simple algorithm which can be described in plain English as Highlevel description If a set of numbers is empty then there is no highest number. Assume the first number in the set is the largest. For each remaining number in the set if this number is greater than the current largest it becomes the new largest. When there are no unchecked numbers left in the set consider the current largest number to be the largest in the set. Quasiformal description Written in prose but much closer to the highlevel language of a computer program the following is the more formal coding of the algorithm in pseudocode or pidgin code  Algorithm LargestNumber
Input A list of numbers L .
Output The largest number in the list L . if L.size  0 return null largest  L  for each item in L  do if item  largest  then largest  item return largest  denotes assignment .  For instance  largest  item  means that the value of largest changes to the value of item .  return  terminates the algorithm and outputs the following value. See also  edit  Mathematics portal Computer programming portal Abstract machine ALGOL Algorithm aversion Algorithm engineering Algorithm characterizations Algorithmic bias Algorithmic composition Algorithmic entities Algorithmic synthesis Algorithmic technique Algorithmic topology Computational mathematics Garbage in garbage out Introduction to Algorithms textbook Government by algorithm List of algorithms List of algorithm general topics Medium is the message Regulation of algorithms Theory of computation Computability theory Computational complexity theory Notes  edit   a b Definition of ALGORITHM . MerriamWebster Online Dictionary . Archived from the original on February 14 2020 . Retrieved November 14 2019 .  a b David A. Grossman Ophir Frieder Information Retrieval Algorithms and Heuristics  2nd edition 2004 ISBN 1402030045  a b Any classical mathematical algorithm for example can be described in a finite number of English words Rogers 19872.  a b Well defined concerning the agent that executes the algorithm There is a computing agent usually human which can react to the instructions and carry out the computations Rogers 19872.  an algorithm is a procedure for computing a function concerning some chosen notation for integers ... this limitation to numerical functions results in no loss of generality Rogers 19871.  An algorithm has zero or more inputs i.e. quantities which are given to it initially before the algorithm begins Knuth 19735.  A procedure which has all the characteristics of an algorithm except that it possibly lacks finiteness may be called a computational method   Knuth 19735.  An algorithm has one or more outputs i.e. quantities which have a specified relation to the inputs Knuth 19735.  Whether or not a process with random interior processes not including the input is an algorithm is debatable. Rogers opines that a computation is carried out in a discrete stepwise fashion without the use of continuous methods or analog devices ... carried forward deterministically without resort to random methods or devices e.g. dice Rogers 19872.  Blair Ann Duguid Paul Goeing AnjaSilvia and Grafton Anthony. Information A Historical Companion Princeton Princeton University Press 2021. p. 247  Stone 19734  Simanowski Roberto 2018. The Death Algorithm and Other Digital Dilemmas . Untimely Meditations. Vol. 14. Translated by Chase Jefferson. Cambridge Massachusetts MIT Press. p. 147. ISBN 9780262536370 . Archived from the original on December 22 2019 . Retrieved May 27 2019 . ... the next level of abstraction of central bureaucracy globally operating algorithms.  Dietrich Eric 1999. Algorithm. In Wilson Robert Andrew Keil Frank C. eds.. The MIT Encyclopedia of the Cognitive Sciences . MIT Cognet library. Cambridge Massachusetts MIT Press published 2001. p. 11. ISBN 9780262731447 . Retrieved July 22 2020 . An algorithm is a recipe method or technique for doing something.  Stone requires that it must terminate in a finite number of steps Stone 197378.  Boolos and Jeffrey 1974199919  a b c d Chabert JeanLuc 2012. A History of Algorithms From the Pebble to the Microchip . Springer Science  Business Media. pp. 7 8. ISBN 9783642181924 .  a b Sriram M. S. 2005. Algorithms in Indian Mathematics . In Emch Gerard G. Sridharan R. Srinivas M. D. eds.. Contributions to the History of Indian Mathematics . Springer. p. 153. ISBN 9789386279255 .  Hayashi T. 2023 January 1. Brahmagupta . Encyclopedia Britannica.  Zaslavsky Claudia 1970. Mathematics of the Yoruba People and of Their Neighbors in Southern Nigeria . The TwoYear College Mathematics Journal . 1 2 76 99. doi  10.23073027363 . ISSN 00494925 . JSTOR 3027363 .  a b c Cooke Roger L. 2005. The History of Mathematics A Brief Course . John Wiley  Sons. ISBN 9781118460290 .  Chabert JeanLuc ed. 1999. A History of Algorithms . SpringerLink . doi  10.10079783642181924 . ISBN 9783540633693 .  a b Dooley John F. 2013. A Brief History of Cryptology and Cryptographic Algorithms . Springer Science  Business Media. pp. 12 3. ISBN 9783319016283 .  Knuth Donald E. 1972. Ancient Babylonian Algorithms PDF . Commun. ACM . 15 7 671 677. doi  10.1145361454.361514 . ISSN 00010782 . S2CID 7829945 . Archived from the original PDF on December 24 2012.  Aaboe Asger 2001. Episodes from the Early History of Astronomy . New York Springer. pp. 40 62. ISBN 9780387951362 .  Ast Courtney. Eratosthenes . Wichita State University Department of Mathematics and Statistics. Archived from the original on February 27 2015 . Retrieved February 27 2015 .  Bolter 198424  Bolter 198426  Bolter 19843334 204206.  Bell and Newell diagram 197139 cf. Davis 2000  Melina Hill Valley News Correspondent A Tinkerer Gets a Place in History  Valley News West Lebanon NH Thursday March 31 1983 p. 13.  Davis 200014  Kleene 1943 in Davis 1965274  Rosser 1939 in Davis 1965225  a b c d Sipser 2006157  Kriegel HansPeter  Schubert Erich Zimek Arthur 2016. The black art of runtime evaluation Are we comparing algorithms or implementations. Knowledge and Information Systems . 52 2 341 378. doi  10.1007s1011501610042 . ISSN 02191377 . S2CID 40772241 .  Gillian Conahan January 2013. Better Math Makes Faster Data Networks . discovermagazine.com. Archived from the original on May 13 2014 . Retrieved May 13 2014 .  Haitham Hassanieh Piotr Indyk  Dina Katabi and Eric Price  ACMSIAM Symposium On Discrete Algorithms SODA Archived July 4 2013 at the Wayback Machine  Kyoto January 2012. See also the sFFT Web Page Archived February 21 2012 at the Wayback Machine .  Goodrich Michael T.  Tamassia Roberto 2002. Algorithm Design Foundations Analysis and Internet Examples . John Wiley  Sons Inc. ISBN 9780471383659 . Archived from the original on April 28 2015 . Retrieved June 14 2018 .  BigO notation article  Algorithms . Khan Academy . Retrieved June 3 2024 .  John G. Kemeny and Thomas E. Kurtz 1985 Back to Basic The History Corruption and Future of the Language  AddisonWesley Publishing Company Inc. Reading MA ISBN 0201134330 .  Tausworthe 1977101  Tausworthe 1977142  Knuth 1973 section 1.2.1 expanded by Tausworthe 1977 at pages 100ff and Chapter 9.1  The Experts Does the Patent System Encourage Innovation . The Wall Street Journal . May 16 2013. ISSN 00999660 . Retrieved March 29 2017 .  Kellerer Hans Pferschy Ulrich Pisinger David 2004. Knapsack Problems  Hans Kellerer  Springer . Springer. doi  10.10079783540247777 . ISBN 9783540402862 . S2CID 28836720 . Archived from the original on October 18 2017 . Retrieved September 19 2017 .  For instance the volume of a convex polytope described using a membership oracle can be approximated to high accuracy by a randomized polynomial time algorithm but not by a deterministic one see Dyer Martin Frieze Alan Kannan Ravi January 1991. A Random Polynomialtime Algorithm for Approximating the Volume of Convex Bodies. J. ACM . 38 1 1 17. CiteSeerX 10.1.1.145.4600 . doi  10.1145102782.102783 . S2CID 13268711 .  George B. Dantzig and Mukund N. Thapa. 2003. Linear Programming 2 Theory and Extensions . SpringerVerlag. Bibliography  edit  Axt P 1959. On a Subrecursive Hierarchy and Primitive Recursive Degrees . Transactions of the American Mathematical Society . 92 1 85 105. doi  10.23071993169 . JSTOR 1993169 . Bell C. Gordon and Newell Allen 1971 Computer Structures Readings and Examples  McGrawHill Book Company New York. ISBN 0070043574 . Blass Andreas  Gurevich Yuri 2003. Algorithms A Quest for Absolute Definitions PDF . Bulletin of European Association for Theoretical Computer Science . 81 . Archived PDF from the original on October 9 2022. Includes a bibliography of 56 references. Bolter David J. 1984. Turings Man Western Culture in the Computer Age 1984 ed.. Chapel Hill NC The University of North Carolina Press. ISBN 9780807815649 .  ISBN 0807841080 Boolos George  Jeffrey Richard 1999 . Computability and Logic 4th ed.. Cambridge University Press London. ISBN 9780521204026 .  cf. Chapter 3 Turing machines where they discuss certain enumerable sets not effectively mechanically enumerable. Burgin Mark 2004. SuperRecursive Algorithms . Springer. ISBN 9780387955698 . Campagnolo M.L. Moore C.  and Costa J.F. 2000 An analog characterization of the subrecursive functions. In Proc. of the 4th Conference on Real Numbers and Computers  Odense University pp. 91109 Church Alonzo 1936. An Unsolvable Problem of Elementary Number Theory. American Journal of Mathematics . 58 2 345 363. doi  10.23072371045 . JSTOR 2371045 . Reprinted in The Undecidable  p. 89ff. The first expression of Churchs Thesis. See in particular page 100  The Undecidable  where he defines the notion of effective calculability in terms of an algorithm and he uses the word terminates etc. Church Alonzo 1936. A Note on the Entscheidungsproblem. The Journal of Symbolic Logic . 1 1 40 41. doi  10.23072269326 . JSTOR 2269326 . S2CID 42323521 . Church Alonzo 1936. Correction to a Note on the Entscheidungsproblem. The Journal of Symbolic Logic . 1 3 101 102. doi  10.23072269030 . JSTOR 2269030 . S2CID 5557237 . Reprinted in The Undecidable  p. 110ff. Church shows that the Entscheidungsproblem is unsolvable in about 3 pages of text and 3 pages of footnotes. Daffa Ali Abdullah al 1977. The Muslim contribution to mathematics . London Croom Helm. ISBN 9780856644641 . Davis Martin 1965. The Undecidable Basic Papers On Undecidable Propositions Unsolvable Problems and Computable Functions . New York Raven Press. ISBN 9780486432281 . Davis gives commentary before each article. Papers of Gödel  Alonzo Church  Turing  Rosser  Kleene  and Emil Post are included those cited in the article are listed here by authors name. Davis Martin 2000. Engines of Logic Mathematicians and the Origin of the Computer . New York W.W. Nortion. ISBN 9780393322293 . Davis offers concise biographies of Leibniz  Boole  Frege  Cantor  Hilbert  Gödel and Turing with von Neumann as the showstealing villain. Very brief bios of JosephMarie Jacquard  Babbage  Ada Lovelace  Claude Shannon  Howard Aiken  etc. This article incorporates public domain material from Paul E. Black. algorithm . Dictionary of Algorithms and Data Structures . NIST . Dean Tim 2012. Evolution and moral diversity . Baltic International Yearbook of Cognition Logic and Communication . 7 . doi  10.4148biyclc.v7i0.1775 . Dennett Daniel 1995. Darwins Dangerous Idea . New York TouchstoneSimon  Schuster. pp. 32 36. ISBN 9780684802909 . Dilson Jesse 2007. The Abacus 1968 1994 ed.. St. Martins Press NY. ISBN 9780312104092 .  ISBN 031210409X Yuri Gurevich  Sequential Abstract State Machines Capture Sequential Algorithms  ACM Transactions on Computational Logic Vol 1 no 1 July 2000 pp. 77111. Includes bibliography of 33 sources. van Heijenoort Jean 2001. From Frege to Gödel A Source Book in Mathematical Logic 18791931 1967 ed.. Harvard University Press Cambridge. ISBN 9780674324497 .  3rd edition 1976 ISBN 0674324498 pbk. Hodges Andrew 1983. Alan Turing The Enigma . New York Simon and Schuster . ISBN 9780671492076 .  ISBN 0671492071 . Cf. Chapter The Spirit of Truth for a history leading to and a discussion of his proof. Kleene Stephen C. 1936. General Recursive Functions of Natural Numbers . Mathematische Annalen . 112 5 727 742. doi  10.1007BF01565439 . S2CID 120517999 . Archived from the original on September 3 2014 . Retrieved September 30 2013 . Presented to the American Mathematical Society September 1935. Reprinted in The Undecidable  p. 237ff. Kleenes definition of general recursion known now as murecursion was used by Church in his 1935 paper An Unsolvable Problem of Elementary Number Theory that proved the decision problem to be undecidable i.e. a negative result. Kleene Stephen C. 1943. Recursive Predicates and Quantifiers . Transactions of the American Mathematical Society . 53 1 41 73. doi  10.23071990131 . JSTOR 1990131 . Reprinted in The Undecidable  p. 255ff. Kleene refined his definition of general recursion and proceeded in his chapter 12. Algorithmic theories to posit Thesis I p. 274 he would later repeat this thesis in Kleene 1952300 and name it Churchs ThesisKleene 1952317 i.e. the Church thesis . Kleene Stephen C. 1991 . Introduction to Metamathematics Tenth ed.. NorthHolland Publishing Company. ISBN 9780720421033 . Knuth Donald 1997. Fundamental Algorithms Third Edition . Reading Massachusetts AddisonWesley. ISBN 9780201896831 . Knuth Donald 1969. Volume 2Seminumerical Algorithms The Art of Computer Programming First Edition . Reading Massachusetts AddisonWesley. Kosovsky N.K. Elements of Mathematical Logic and its Application to the theory of Subrecursive Algorithms  LSU Publ. Leningrad 1981 Kowalski Robert 1979. AlgorithmLogicControl . Communications of the ACM . 22 7 424 436. doi  10.1145359131.359136 . S2CID 2509896 . A.A. Markov 1954 Theory of algorithms . Translated by Jacques J. SchorrKon and PST staff Imprint Moscow Academy of Sciences of the USSR 1954 i.e. Jerusalem Israel Program for Scientific Translations 1961 available from the Office of Technical Services U.S. Dept. of Commerce Washington Description 444 p. 28 cm. Added t.p. in Russian Translation of Works of the Mathematical Institute Academy of Sciences of the USSR v. 42. Original title Teoriya algerifmov. QA248.M2943 Dartmouth College library. U.S. Dept. of Commerce Office of Technical Services number OTS 6051085. Minsky Marvin 1967. Computation Finite and Infinite Machines First ed.. PrenticeHall Englewood Cliffs NJ. ISBN 9780131654495 . Minsky expands his ...idea of an algorithm  an effective procedure... in chapter 5.1 Computability Effective Procedures and Algorithms. Infinite machines. Post Emil 1936. Finite Combinatory Processes Formulation I. The Journal of Symbolic Logic . 1 3 103 105. doi  10.23072269031 . JSTOR 2269031 . S2CID 40284503 . Reprinted in The Undecidable  pp. 289ff. Post defines a simple algorithmiclike process of a man writing marks or erasing marks and going from box to box and eventually halting as he follows a list of simple instructions. This is cited by Kleene as one source of his Thesis I the socalled ChurchTuring thesis . Rogers Hartley Jr. 1987. Theory of Recursive Functions and Effective Computability . The MIT Press. ISBN 9780262680523 . Rosser J.B. 1939. An Informal Exposition of Proofs of Godels Theorem and Churchs Theorem. Journal of Symbolic Logic . 4 2 53 60. doi  10.23072269059 . JSTOR 2269059 . S2CID 39499392 . Reprinted in The Undecidable  p. 223ff. Herein is Rossers famous definition of effective method ...a method each step of which is precisely predetermined and which is certain to produce the answer in a finite number of steps... a machine which will then solve any problem of the set with no human intervention beyond inserting the question and later reading the answer p. 225226 The Undecidable  SantosLang Christopher 2015. Moral Ecology Approaches to Machine Ethics PDF . In van Rysewyk Simon Pontier Matthijs eds.. Machine Medical Ethics . Intelligent Systems Control and Automation Science and Engineering. Vol. 74. Switzerland Springer. pp. 111 127. doi  10.10079783319081083_8 . ISBN 9783319081076 . Archived PDF from the original on October 9 2022. Scott Michael L. 2009. Programming Language Pragmatics 3rd ed.. Morgan Kaufmann PublishersElsevier. ISBN 9780123745149 . Sipser Michael 2006. Introduction to the Theory of Computation . PWS Publishing Company. ISBN 9780534947286 . Sober Elliott Wilson David Sloan 1998. Unto Others The Evolution and Psychology of Unselfish Behavior . Cambridge Harvard University Press. ISBN 9780674930469 . Stone Harold S. 1972. Introduction to Computer Organization and Data Structures 1972 ed.. McGrawHill New York. ISBN 9780070617261 . Cf. in particular the first chapter titled Algorithms Turing Machines and Programs . His succinct informal definition ...any sequence of instructions that can be obeyed by a robot is called an algorithm  p. 4. Tausworthe Robert C 1977. Standardized Development of Computer Software Part 1 Methods . Englewood Cliffs NJ PrenticeHall Inc. ISBN 9780138421953 . Turing Alan M. 193637. On Computable Numbers With An Application to the Entscheidungsproblem. Proceedings of the London Mathematical Society . Series 2. 42  230 265. doi  10.1112plmss242.1.230 . S2CID 73712 . . Corrections ibid vol. 431937 pp. 544546. Reprinted in The Undecidable  p. 116ff. Turings famous paper completed as a Masters dissertation while at Kings College Cambridge UK. Turing Alan M. 1939. Systems of Logic Based on Ordinals. Proceedings of the London Mathematical Society . 45  161 228. doi  10.1112plmss245.1.161 . hdl  21.111160000000191CE3 . Reprinted in The Undecidable  pp. 155ff. Turings paper that defined the oracle was his PhD thesis while at Princeton. United States Patent and Trademark Office 2006 2106.02 Mathematical Algorithms 2100 Patentability  Manual of Patent Examining Procedure MPEP. Latest revision August 2006 Zaslavsky C. 1970. Mathematics of the Yoruba People and of Their Neighbors in Southern Nigeria. The TwoYear College Mathematics Journal 12 7699. httpsdoi.org10.23073027363 Further reading  edit  Bellah Robert Neelly 1985. Habits of the Heart Individualism and Commitment in American Life . Berkeley University of California Press. ISBN 9780520254190 . Berlinski David 2001. The Advent of the Algorithm The 300Year Journey from an Idea to the Computer . Harvest Books. ISBN 9780156013918 . Chabert JeanLuc 1999. A History of Algorithms From the Pebble to the Microchip . Springer Verlag. ISBN 9783540633693 . Thomas H. Cormen Charles E. Leiserson Ronald L. Rivest Clifford Stein 2009. Introduction To Algorithms 3rd ed.. MIT Press. ISBN 9780262033848 . Harel David Feldman Yishai 2004. Algorithmics The Spirit of Computing . AddisonWesley. ISBN 9780321117847 . Hertzke Allen D. McRorie Chris 1998. The Concept of Moral Ecology. In Lawler Peter Augustine McConkey Dale eds.. Community and Political Thought Today . Westport CT Praeger . Jon Kleinberg Éva Tardos2006 Algorithm Design  PearsonAddisonWesley ISBN 9780321295354 Knuth Donald E. 2000. Selected Papers on Analysis of Algorithms Archived July 1 2017 at the Wayback Machine . Stanford California Center for the Study of Language and Information. Knuth Donald E. 2010. Selected Papers on Design of Algorithms Archived July 16 2017 at the Wayback Machine . Stanford California Center for the Study of Language and Information. Wallach Wendell Allen Colin November 2008. Moral Machines Teaching Robots Right from Wrong . US Oxford University Press. ISBN 9780195374049 . Bleakley Chris 2020. Poems that Solve Puzzles The History and Science of Algorithms . Oxford University Press. ISBN 9780198853732 . External links  edit  Look up algorithm in Wiktionary the free dictionary. Wikibooks has a book on the topic of Algorithms At Wikiversity  you can learn more and teach others about Algorithm at the Department of Algorithm Wikimedia Commons has media related to Algorithms . Algorithm . Encyclopedia of Mathematics . EMS Press . 2001 . Weisstein Eric W. Algorithm . MathWorld . Dictionary of Algorithms and Data Structures  National Institute of Standards and Technology Algorithm repositories The Stony Brook Algorithm Repository  State University of New York at Stony Brook Collected Algorithms of the ACM  Associations for Computing Machinery The Stanford GraphBase Archived December 6 2015 at the Wayback Machine  Stanford University v t e Industrial and applied mathematics Computational Algorithms design analysis Automata theory Automated theorem proving Coding theory Computational geometry Constraint satisfaction Constraint programming Computational logic Cryptography Information theory Statistics Mathematical software Arbitraryprecision arithmetic Finite element analysis Tensor software Interactive geometry software Optimization software Statistical software Numericalanalysis software Numerical libraries Solvers Discrete Computer algebra Computational number theory Combinatorics Graph theory Discrete geometry Analysis Approximation theory Clifford analysis Clifford algebra Differential equations Ordinary differential equations Partial differential equations Stochastic differential equations Differential geometry Differential forms Gauge theory Geometric analysis Dynamical systems Chaos theory Control theory Functional analysis Operator algebra Operator theory Harmonic analysis Fourier analysis Multilinear algebra Exterior Geometric Tensor Vector Multivariable calculus Exterior Geometric Tensor Vector Numerical analysis Numerical linear algebra Numerical methods for ordinary differential equations Numerical methods for partial differential equations Validated numerics Variational calculus Probability theory Distributions  random variables  Stochastic processes  analysis Path integral Stochastic variational calculus Mathematical physics Analytical mechanics Lagrangian Hamiltonian Field theory Classical Conformal Effective Gauge Quantum Statistical Topological Perturbation theory in quantum mechanics Potential theory String theory Bosonic Topological Supersymmetry Supersymmetric quantum mechanics Supersymmetric theory of stochastic dynamics Algebraic structures Algebra of physical space Feynman integral Poisson algebra Quantum group Renormalization group Representation theory Spacetime algebra Superalgebra Supersymmetry algebra Decision sciences Game theory Operations research Optimization Social choice theory Statistics Mathematical economics Mathematical finance Other applications Biology Chemistry Psychology Sociology  The Unreasonable Effectiveness of Mathematics in the Natural Sciences  Related Mathematics Organizations Society for Industrial and Applied Mathematics Japan Society for Industrial and Applied Mathematics Société de Mathématiques Appliquées et Industrielles International Council for Industrial and Applied Mathematics European Community on Computational Methods in Applied Sciences Category Mathematics portal  outline  topics list v t e Data structures and algorithms Data structures Array Associative array Binary search tree Fenwick tree Graph Hash table Heap Linked list Queue Segment tree Stack String Tree Trie Algorithms and algorithmic paradigms Backtracking Binary search Breadthfirst search Bruteforce search Depthfirst search Divide and conquer Dynamic programming Graph traversal Fold Greedy Hash function Minimax Online Randomized Recursion Rootfinding Sorting Streaming Sweep line Stringsearching Topological sorting List of data structures List of algorithms Authority control databases International FAST National Germany United States France BnF data Japan Czech Republic Spain Latvia Israel Other Encyclopedia of Modern Ukraine