Standard for the encryption of electronic data Advanced Encryption Standard Rijndael Visualization of the AES round function General Designers Joan Daemen  Vincent Rijmen First published 1998 Derived from Square Successors Anubis  Grand Cru  Kalyna Certification AES winner CRYPTREC  NESSIE  NSA Cipher detail Key sizes 128 192 or 256 bits  note 1  Block sizes 128 bits  note 2  Structure Substitutionpermutation network Rounds 10 12 or 14 depending on key size Best public cryptanalysis Attacks have been published that are computationally faster than a full bruteforce attack  though none as of 2023 are computationally feasible.  1  For AES128 the key can be recovered with a computational complexity of 2 126.1 using the biclique attack . For biclique attacks on AES192 and AES256 the computational complexities of 2 189.7 and 2 254.4 respectively apply. Relatedkey attacks can break AES256 and AES192 with complexities 2 99.5 and 2 176 in both time and data respectively.  2  Another attack was blogged  3  and released as a preprint  4  in 2009. This attack is against AES256 that uses only two related keys and 2 39 time to recover the complete 256bit key of a 9round version or 2 45 time for a 10round version with a stronger type of related subkey attack or 2 70 time for an 11round version. The Advanced Encryption Standard  AES  also known by its original name Rijndael  Dutch pronunciation ˈrɛindaːl   5  is a specification for the encryption of electronic data established by the U.S. National Institute of Standards and Technology NIST in 2001.  6  AES is a variant of the Rijndael block cipher  5  developed by two Belgian cryptographers Joan Daemen and Vincent Rijmen  who submitted a proposal  7  to NIST during the AES selection process .  8  Rijndael is a family of ciphers with different key and block sizes. For AES NIST selected three members of the Rijndael family each with a block size of 128 bits but three different key lengths 128 192 and 256 bits. AES has been adopted by the U.S. government . It supersedes the Data Encryption Standard DES  9  which was published in 1977. The algorithm described by AES is a symmetrickey algorithm  meaning the same key is used for both encrypting and decrypting the data. In the United States AES was announced by the NIST as U.S. FIPS PUB 197 FIPS 197 on November 26 2001.  6  This announcement followed a fiveyear standardization process in which fifteen competing designs were presented and evaluated before the Rijndael cipher was selected as the most suitable.  note 3  AES is included in the ISO  IEC 180333 standard.  AES became effective as a U.S. federal government standard on May 26 2002 after approval by U.S. Secretary of Commerce Donald Evans . AES is available in many different encryption packages and is the first and only publicly accessible cipher approved by the U.S. National Security Agency NSA for top secret information when used in an NSA approved cryptographic module.  note 4  Definitive standards  edit  The Advanced Encryption Standard AES is defined in each of FIPS PUB 197 Advanced Encryption Standard AES  6  ISOIEC 180333 Block ciphers  10  Description of the ciphers  edit  AES is based on a design principle known as a substitutionpermutation network  and is efficient in both software and hardware.  11  Unlike its predecessor DES AES does not use a Feistel network . AES is a variant of Rijndael with a fixed block size of 128 bits  and a key size of 128 192 or 256 bits. By contrast Rijndael per se is specified with block and key sizes that may be any multiple of 32 bits with a minimum of 128 and a maximum of 256 bits. Most AES calculations are done in a particular finite field . AES operates on a 4  4 columnmajor order array of 16 bytes b 0  b 1  ... b 15 termed the state   note 5   b 0 b 4 b 8 b 12 b 1 b 5 b 9 b 13 b 2 b 6 b 10 b 14 b 3 b 7 b 11 b 15  displaystyle beginbmatrixb_0b_4b_8b_12b_1b_5b_9b_13b_2b_6b_10b_14b_3b_7b_11b_15endbmatrix The key size used for an AES cipher specifies the number of transformation rounds that convert the input called the plaintext  into the final output called the ciphertext . The number of rounds are as follows 10 rounds for 128bit keys. 12 rounds for 192bit keys. 14 rounds for 256bit keys. Each round consists of several processing steps including one that depends on the encryption key itself. A set of reverse rounds are applied to transform ciphertext back into the original plaintext using the same encryption key. Highlevel description of the algorithm  edit  KeyExpansion  round keys are derived from the cipher key using the AES key schedule . AES requires a separate 128bit round key block for each round plus one more. Initial round key addition AddRoundKey  each byte of the state is combined with a byte of the round key using bitwise xor . 9 11 or 13 rounds SubBytes  a nonlinear substitution step where each byte is replaced with another according to a lookup table . ShiftRows  a transposition step where the last three rows of the state are shifted cyclically a certain number of steps. MixColumns  a linear mixing operation which operates on the columns of the state combining the four bytes in each column. AddRoundKey Final round making 10 12 or 14 rounds in total SubBytes ShiftRows AddRoundKey The SubBytes step  edit  Main article Rijndael Sbox In the SubBytes step each byte in the state is replaced with its entry in a fixed 8bit lookup table S  b ij  Sa ij  . In the SubBytes step each byte a i  j displaystyle a_ij in the state array is replaced with a SubByte S  a i  j  displaystyle Sa_ij using an 8bit substitution box . Before round 0 the state array is simply the plaintextinput. This operation provides the nonlinearity in the cipher . The Sbox used is derived from the multiplicative inverse over GF 2 8   known to have good nonlinearity properties. To avoid attacks based on simple algebraic properties the Sbox is constructed by combining the inverse function with an invertible affine transformation . The Sbox is also chosen to avoid any fixed points and so is a derangement  i.e. S  a i  j   a i  j displaystyle Sa_ijneq a_ij  and also any opposite fixed points i.e. S  a i  j   a i  j  FF 16 displaystyle Sa_ijoplus a_ijneq textFF_16 .
While performing the decryption the InvSubBytes step the inverse of SubBytes  is used which requires first taking the inverse of the affine transformation and then finding the multiplicative inverse. The ShiftRows step  edit  In the ShiftRows step bytes in each row of the state are shifted cyclically to the left. The number of places each byte is shifted differs incrementally for each row. The ShiftRows step operates on the rows of the state it cyclically shifts the bytes in each row by a certain offset . For AES the first row is left unchanged. Each byte of the second row is shifted one to the left. Similarly the third and fourth rows are shifted by offsets of two and three respectively.  note 6  In this way each column of the output state of the ShiftRows step is composed of bytes from each column of the input state. The importance of this step is to avoid the columns being encrypted independently in which case AES would degenerate into four independent block ciphers. The MixColumns step  edit  Main article Rijndael MixColumns In the MixColumns step each column of the state is multiplied with a fixed polynomial c  x  displaystyle cx . In the MixColumns step the four bytes of each column of the state are combined using an invertible linear transformation . The MixColumns function takes four bytes as input and outputs four bytes where each input byte affects all four output bytes. Together with ShiftRows  MixColumns provides diffusion in the cipher. During this operation each column is transformed using a fixed matrix matrix leftmultiplied by column gives new value of column in the state  b 0  j b 1  j b 2  j b 3  j    2 3 1 1 1 2 3 1 1 1 2 3 3 1 1 2   a 0  j a 1  j a 2  j a 3  j  0  j  3 displaystyle beginbmatrixb_0jb_1jb_2jb_3jendbmatrixbeginbmatrix2311123111233112endbmatrixbeginbmatrixa_0ja_1ja_2ja_3jendbmatrixqquad 0leq jleq 3 Matrix multiplication is composed of multiplication and addition of the entries. Entries are bytes treated as coefficients of polynomial of order x 7 displaystyle x7 . Addition is simply XOR. Multiplication is modulo irreducible polynomial x 8  x 4  x 3  x  1 displaystyle x8x4x3x1 . If processed bit by bit then after shifting a conditional XOR with 1B 16 should be performed if the shifted value is larger than FF 16 overflow must be corrected by subtraction of generating polynomial. These are special cases of the usual multiplication in GF   2 8  displaystyle operatorname GF 28 . In more general sense each column is treated as a polynomial over GF   2 8  displaystyle operatorname GF 28 and is then multiplied modulo 01 16  z 4  01 16 displaystyle 01_16cdot z401_16 with a fixed polynomial c  z   03 16  z 3  01 16  z 2  01 16  z  02 16 displaystyle cz03_16cdot z301_16cdot z201_16cdot z02_16 . The coefficients are displayed in their hexadecimal equivalent of the binary representation of bit polynomials from GF   2   x  displaystyle operatorname GF 2x . The MixColumns step can also be viewed as a multiplication by the shown particular MDS matrix in the finite field GF   2 8  displaystyle operatorname GF 28 . This process is described further in the article Rijndael MixColumns . The AddRoundKey  edit  In the AddRoundKey step each byte of the state is combined with a byte of the round subkey using the XOR operation . In the AddRoundKey step the subkey is combined with the state. For each round a subkey is derived from the main key using Rijndaels key schedule  each subkey is the same size as the state. The subkey is added by combining of the state with the corresponding byte of the subkey using bitwise XOR . Optimization of the cipher  edit  On systems with 32bit or larger words it is possible to speed up execution of this cipher by combining the SubBytes and ShiftRows steps with the MixColumns step by transforming them into a sequence of table lookups. This requires four 256entry 32bit tables together occupying 4096 bytes.  A round can then be performed with 16 table lookup operations and 12 32bit exclusiveor operations followed by four 32bit exclusiveor operations in the AddRoundKey step.  12  Alternatively the table lookup operation can be performed with a single 256entry 32bit table occupying 1024 bytes followed by circular rotation operations. Using a byteoriented approach it is possible to combine the SubBytes  ShiftRows  and MixColumns steps into a single round operation.  13  Security  edit  The National Security Agency NSA reviewed all the AES finalists including Rijndael and stated that all of them were secure enough for U.S. Government nonclassified data. In June 2003 the U.S. Government announced that AES could be used to protect classified information  The design and strength of all key lengths of the AES algorithm i.e. 128 192 and 256 are sufficient to protect classified information up to the SECRET level. TOP SECRET information will require use of either the 192 or 256 key lengths. The implementation of AES in products intended to protect national security systems andor information must be reviewed and certified by NSA prior to their acquisition and use.  14  AES has 10 rounds for 128bit keys 12 rounds for 192bit keys and 14 rounds for 256bit keys. By 2006 the best known attacks were on 7 rounds for 128bit keys 8 rounds for 192bit keys and 9 rounds for 256bit keys.  15  Known attacks  edit  For cryptographers a cryptographic break is anything faster than a bruteforce attack   i.e. performing one trial decryption for each possible key in sequence see Cryptanalysis  Computational resources required  . A break can thus include results that are infeasible with current technology. Despite being impractical theoretical breaks can sometimes provide insight into vulnerability patterns. The largest successful publicly known bruteforce attack against a widely implemented blockcipher encryption algorithm was against a 64bit RC5 key by distributed.net in 2006.  16  The key space increases by a factor of 2 for each additional bit of key length and if every possible value of the key is equiprobable this translates into a doubling of the average bruteforce key search time with every additional bit of key length. This implies that the effort of a bruteforce search increases exponentially with key length. Key length in itself does not imply security against attacks since there are ciphers with very long keys that have been found to be vulnerable. AES has a fairly simple algebraic framework.  17  In 2002 a theoretical attack named the  XSL attack  was announced by Nicolas Courtois and Josef Pieprzyk  purporting to show a weakness in the AES algorithm partially due to the low complexity of its nonlinear components.  18  Since then other papers have shown that the attack as originally presented is unworkable see XSL attack on block ciphers . During the AES selection process developers of competing algorithms wrote of Rijndaels algorithm we are concerned about its use ... in securitycritical applications.  19  In October 2000 however at the end of the AES selection process Bruce Schneier  a developer of the competing algorithm Twofish  wrote that while he thought successful academic attacks on Rijndael would be developed someday he did not believe that anyone will ever discover an attack that will allow someone to read Rijndael traffic.  20  Until May 2009 the only successful published attacks against the full AES were sidechannel attacks on some specific implementations. In 2009 a new relatedkey attack was discovered that exploits the simplicity of AESs key schedule and has a complexity of 2 119 . In December 2009 it was improved to 2 99.5 .  2  This is a followup to an attack discovered earlier in 2009 by Alex Biryukov  Dmitry Khovratovich  and Ivica Nikolić with a complexity of 2 96 for one out of every 2 35 keys.  21  However relatedkey attacks are not of concern in any properly designed cryptographic protocol as a properly designed protocol i.e. implementational software will take care not to allow related keys essentially by constraining an attackers means of selecting keys for relatedness. Another attack was blogged by Bruce Schneier  3  on July 30 2009 and released as a preprint  22  on August 3 2009. This new attack by Alex Biryukov Orr Dunkelman  Nathan Keller  Dmitry Khovratovich and Adi Shamir  is against AES256 that uses only two related keys and 2 39 time to recover the complete 256bit key of a 9round version or 2 45 time for a 10round version with a stronger type of related subkey attack or 2 70 time for an 11round version. 256bit AES uses 14 rounds so these attacks are not effective against full AES. The practicality of these attacks with stronger related keys has been criticized  23  for instance by the paper on chosenkeyrelationsinthemiddle attacks on AES128 authored by Vincent Rijmen in 2010.  24  In November 2009 the first knownkey distinguishing attack against a reduced 8round version of AES128 was released as a preprint.  25  This knownkey distinguishing attack is an improvement of the rebound or the startfromthemiddle attack against AESlike permutations which view two consecutive rounds of permutation as the application of a socalled SuperSbox. It works on the 8round version of AES128 with a time complexity of 2 48  and a memory complexity of 2 32 .  128bit AES uses 10 rounds so this attack is not effective against full AES128. The first keyrecovery attacks on full AES were by Andrey Bogdanov Dmitry Khovratovich and Christian Rechberger and were published in 2011.  26  The attack is a biclique attack and is faster than brute force by a factor of about four. It requires 2 126.2 operations to recover an AES128 key. For AES192 and AES256 2 190.2 and 2 254.6 operations are needed respectively. This result has been further improved to 2 126.0 for AES128 2 189.9 for AES192 and 2 254.3 for AES256 by Biaoshuai Tao and Hongjun Wu in a 2015 paper  27  which are the current best results in key recovery attack against AES. This is a very small gain as a 126bit key instead of 128 bits would still take billions of years to brute force on current and foreseeable hardware. Also the authors calculate the best attack using their technique on AES with a 128bit key requires storing 2 88 bits of data. That works out to about 38 trillion terabytes of data which was more than all the data stored on all the computers on the planet in 2016.  28  A paper in 2015 later improved the space complexity to 2 56 bits  27  which is 9007 terabytes while still keeping a time complexity of approximately 2 126 . According to the Snowden documents  the NSA is doing research on whether a cryptographic attack based on tau statistic may help to break AES.  29  At present there is no known practical attack that would allow someone without knowledge of the key to read data encrypted by AES when correctly implemented.  citation needed  Sidechannel attacks  edit  Sidechannel attacks do not attack the cipher as a black box  and thus are not related to cipher security as defined in the classical context but are important in practice. They attack implementations of the cipher on hardware or software systems that inadvertently leak data. There are several such known attacks on various implementations of AES. In April 2005 D. J. Bernstein announced a cachetiming attack that he used to break a custom server that used OpenSSL s AES encryption.  30  The attack required over 200 million chosen plaintexts.  31  The custom server was designed to give out as much timing information as possible the server reports back the number of machine cycles taken by the encryption operation. However as Bernstein pointed out reducing the precision of the servers timestamps or eliminating them from the servers responses does not stop the attack the client simply uses roundtrip timings based on its local clock and compensates for the increased noise by averaging over a larger number of samples.  30  In October 2005 Dag Arne Osvik Adi Shamir and Eran Tromer presented a paper demonstrating several cachetiming attacks against the implementations in AES found in OpenSSL and Linuxs dmcrypt partition encryption function.  32  One attack was able to obtain an entire AES key after only 800 operations triggering encryptions in a total of 65 milliseconds. This attack requires the attacker to be able to run programs on the same system or platform that is performing AES. In December 2009 an attack on some hardware implementations was published that used differential fault analysis and allows recovery of a key with a complexity of 2 32 .  33  In November 2010 Endre Bangerter David Gullasch and Stephan Krenn published a paper which described a practical approach to a near real time recovery of secret keys from AES128 without the need for either cipher text or plaintext. The approach also works on AES128 implementations that use compression tables such as OpenSSL.  34  Like some earlier attacks this one requires the ability to run unprivileged code on the system performing the AES encryption which may be achieved by malware infection far more easily than commandeering the root account.  35  In March 2016 C. Ashokkumar Ravi Prakash Giri and Bernard Menezes presented a sidechannel attack on AES implementations that can recover the complete 128bit AES key in just 67 blocks of plaintextciphertext which is a substantial improvement over previous works that require between 100 and a million encryptions.  36  The proposed attack requires standard user privilege and keyretrieval algorithms run under a minute. Many modern CPUs have builtin hardware instructions for AES  which protect against timingrelated sidechannel attacks.  37   38  Quantum attacks  edit  AES256 is considered to be quantum resistant as it has similar quantum resistance to AES128s resistance against traditional nonquantum attacks at 128 bits of security . AES192 and AES128 are not considered quantum resistant due to their smaller key sizes. AES192 has a strength of 96 bits against quantum attacks and AES128 has 64 bits of strength against quantum attacks making them both insecure.  39   40  NISTCSEC validation  edit  The Cryptographic Module Validation Program CMVP is operated jointly by the United States Governments National Institute of Standards and Technology NIST Computer Security Division and the Communications Security Establishment CSE of the Government of Canada. The use of cryptographic modules validated to NIST FIPS 1402 is required by the United States Government for encryption of all data that has a classification of Sensitive but Unclassified SBU or above. From NSTISSP 11 National Policy Governing the Acquisition of Information Assurance Encryption products for protecting classified information will be certified by NSA and encryption products intended for protecting sensitive information will be certified in accordance with NIST FIPS 1402.  41  The Government of Canada also recommends the use of FIPS 140 validated cryptographic modules in unclassified applications of its departments. Although NIST publication 197 FIPS 197 is the unique document that covers the AES algorithm vendors typically approach the CMVP under FIPS 140 and ask to have several algorithms such as Triple DES or SHA1  validated at the same time. Therefore it is rare to find cryptographic modules that are uniquely FIPS 197 validated and NIST itself does not generally take the time to list FIPS 197 validated modules separately on its public web site. Instead FIPS 197 validation is typically just listed as an FIPS approved AES notation with a specific FIPS 197 certificate number in the current list of FIPS 140 validated cryptographic modules. The Cryptographic Algorithm Validation Program CAVP  42  allows for independent validation of the correct implementation of the AES algorithm. Successful validation results in being listed on the NIST validations page.  43  This testing is a prerequisite for the FIPS 1402 module validation. However successful CAVP validation in no way implies that the cryptographic module implementing the algorithm is secure. A cryptographic module lacking FIPS 1402 validation or specific approval by the NSA is not deemed secure by the US Government and cannot be used to protect government data.  41  FIPS 1402 validation is challenging to achieve both technically and fiscally.  44  There is a standardized battery of tests as well as an element of source code review that must be passed over a period of a few weeks. The cost to perform these tests through an approved laboratory can be significant e.g. well over 30000 US  44  and does not include the time it takes to write test document and prepare a module for validation. After validation modules must be resubmitted and reevaluated if they are changed in any way. This can vary from simple paperwork updates if the security functionality did not change to a more substantial set of retesting if the security functionality was impacted by the change. Test vectors  edit  Test vectors are a set of known ciphers for a given input and key. NIST distributes the reference of AES test vectors as AES Known Answer Test KAT Vectors.  note 7  Performance  edit  High speed and low RAM requirements were some of the criteria of the AES selection process. As the chosen algorithm AES performed well on a wide variety of hardware from 8bit smart cards to highperformance computers. On a Pentium Pro  AES encryption requires 18 clock cycles per byte cpb  45  equivalent to a throughput of about 11 MiBs for a 200 MHz processor. On Intel Core and AMD Ryzen CPUs supporting AESNI instruction set extensions throughput can be multiple GiBs.  46  On an Intel Westmere CPU AES encryption using AESNI takes about 1.3 cpb for AES128 and 1.8 cpb for AES256.  47  Implementations  edit  Main article AES implementations See also  edit  AES modes of operation Disk encryption Whirlpool  hash function created by Vincent Rijmen and Paulo S. L. M. Barreto List of free and opensource software packages Notes  edit   Key sizes of 128 160 192 224 and 256 bits are supported by the Rijndael algorithm but only the 128 192 and 256bit key sizes are specified in the AES standard.  Block sizes of 128 160 192 224 and 256 bits are supported by the Rijndael algorithm for each key size but only the 128bit block size is specified in the AES standard.  See Advanced Encryption Standard process for more details.  See Security of AES below.  Largeblock variants of Rijndael use an array with additional columns but always four rows.  Rijndael variants with a larger block size have slightly different offsets. For blocks of sizes 128 bits and 192 bits the shifting pattern is the same. Row n displaystyle n is shifted left circular by n  1 displaystyle n1 bytes.  For a 256bit block the first row is unchanged and the shifting for the second third and fourth row is 1 byte 3 bytes and 4 bytes respectivelythis change only applies for the Rijndael cipher when used with a 256bit block as AES does not use 256bit blocks.  The AES Known Answer Test KAT Vectors are available in Zip format within the NIST site here Archived 20091023 at the Wayback Machine References  edit   Biclique Cryptanalysis of the Full AES PDF . Archived from the original PDF on March 6 2016 . Retrieved May 1 2019 .  a b Alex Biryukov and Dmitry Khovratovich Relatedkey Cryptanalysis of the Full AES192 and AES256  Relatedkey Cryptanalysis of the Full AES192 and AES256 . Table 1. Archived from the original on 20090928 . Retrieved 20100216 .  a b Bruce Schneier 20090730. Another New AES Attack . Schneier on Security A blog covering security and security technology . Archived from the original on 20091005 . Retrieved 20100311 .  Alex Biryukov Orr Dunkelman Nathan Keller Dmitry Khovratovich Adi Shamir 20090819. Key Recovery Attacks of Practical Complexity on AES Variants With Up To 10 Rounds . Archived from the original on 28 January 2010 . Retrieved 20100311 .  a b Daemen Joan Rijmen Vincent March 9 2003. AES Proposal Rijndael PDF . National Institute of Standards and Technology. p. 1. Archived PDF from the original on 5 March 2013 . Retrieved 21 February 2013 .  a b c Announcing the ADVANCED ENCRYPTION STANDARD AES PDF . Federal Information Processing Standards Publication 197 . United States National Institute of Standards and Technology NIST. November 26 2001. Archived PDF from the original on August 23 2024 . Retrieved August 26 2024 .  Joan Daemen and Vincent Rijmen September 3 1999. AES Proposal Rijndael PDF . Archived from the original PDF on February 3 2007.  John Schwartz October 3 2000. U.S. Selects a New Encryption Technique . New York Times . Archived from the original on March 28 2017.  Westlund Harold B. 2002. NIST reports measurable success of Advanced Encryption Standard . Journal of Research of the National Institute of Standards and Technology . Archived from the original on 20071103.  ISOIEC 180333 Information technology  Security techniques  Encryption algorithms  Part 3 Block ciphers . Archived from the original on 20131203.  Bruce Schneier John Kelsey Doug Whiting David Wagner Chris Hall Niels Ferguson Tadayoshi Kohno et al. May 2000. The Twofish Teams Final Comments on AES Selection PDF . Archived PDF from the original on 20100102.  Bertoni Guido Breveglieri Luca Fragneto Pasqualina MacChetti Marco Marchesin Stefano 2003. Efficient Software Implementation of AES on 32Bit Platforms . Cryptographic Hardware and Embedded Systems  CHES 2002 . Lecture Notes in Computer Science. Vol. 2523. pp. 159 171. doi  10.10073540364005_13 . ISBN 9783540004097 .  byteorientedaes  A public domain byteoriented implementation of AES in C  Google Project Hosting . Archived from the original on 20130720 . Retrieved 20121223 .  Lynn Hathaway June 2003. National Policy on the Use of the Advanced Encryption Standard AES to Protect National Security Systems and National Security Information PDF . Archived PDF from the original on 20101106 . Retrieved 20110215 .  John Kelsey  Stefan Lucks  Bruce Schneier  Mike Stay  David Wagner  and Doug Whiting  Improved Cryptanalysis of Rijndael  Fast Software Encryption  2000 pp213230 Academic Improved Cryptanalysis of Rijndael  Schneier on Security . Archived from the original on 20070223 . Retrieved 20070306 .  Ou George April 30 2006. Is encryption really crackable . ZiffDavis. Archived from the original on August 8 2010 . Retrieved August 7 2010 .  Sean Murphy . University of London. Archived from the original on 20090131 . Retrieved 20081102 .  Bruce Schneier. AES News CryptoGram Newsletter September 15 2002 . Archived from the original on 7 July 2007 . Retrieved 20070727 .  Niels Ferguson  Richard Schroeppel  Doug Whiting 2001. A simple algebraic representation of Rijndael . Proceedings of Selected Areas in Cryptography 2001 Lecture Notes in Computer Science . SpringerVerlag . pp. 103 111. CiteSeerX 10.1.1.28.4921 . Archived from the original PDF PostScript  on 4 November 2006 . Retrieved 20061006 .  Bruce Schneier AES Announced Archived 20090201 at the Wayback Machine  October 15 2000  Nikolić Ivica 2009. Distinguisher and RelatedKey Attack on the Full AES256. Advances in Cryptology  CRYPTO 2009 . Lecture Notes in Computer Science. Vol. 5677. Springer Berlin  Heidelberg. pp. 231 249. doi  10.10079783642033568_14 . ISBN 9783642033551 .  Alex Biryukov Orr Dunkelman Nathan Keller Dmitry Khovratovich Adi Shamir 20090819. Key Recovery Attacks of Practical Complexity on AES Variants With Up To 10 Rounds . Archived from the original on 28 January 2010 . Retrieved 20100311 .  Agren Martin 2012. On Some Symmetric Lightweight Cryptographic Designs . Dissertation Lund University. pp. 38 39.  Vincent Rijmen 2010. PracticalTitled Attack on AES128 Using ChosenText Relations PDF . IACR Cryptology ePrint Archive . Archived PDF from the original on 20100702.  Henri Gilbert Thomas Peyrin 20091109. SuperSbox Cryptanalysis Improved Attacks for AESlike permutations . IACR Cryptology ePrint Archive . Archived from the original on 20100604 . Retrieved 20100311 .  Bogdanov Andrey Khovratovich Dmitry Rechberger Christian 2011. Biclique Cryptanalysis of the Full AES. In Lee Dong Hoon Wang Xiaoyun eds.. Advances in Cryptology  ASIACRYPT 2011 . Lecture Notes in Computer Science. Vol. 7073. pp. 344 371. doi  10.10079783642253850_19 . ISBN 9783642253850 .  a b Tao Biaoshuai Wu Hongjun 2015. Improving the Biclique Cryptanalysis of AES. In Foo Ernest Stebila Douglas eds.. Information Security and Privacy . Lecture Notes in Computer Science. Vol. 9144. pp. 39 56. doi  10.10079783319199627_3 . ISBN 9783319199627 .  Jeffrey Goldberg 20110818. AES Encryption isnt Cracked . Archived from the original on 8 January 2015 . Retrieved 30 December 2014 .  Prying Eyes Inside the NSAs War on Internet Security . Spiegel Online . Hamburg Germany. 28 December 2014. Archived from the original on 24 January 2015 . Retrieved 4 September 2015 .  a b Index of formal scientific papers . Cr.yp.to. Archived from the original on 20080917 . Retrieved 20081102 .  Bruce Schneier. AES Timing Attack . Archived from the original on 12 February 2007 . Retrieved 20070317 .  Dag Arne Osvik Adi Shamir Eran Tromer 20051120. Cache Attacks and Countermeasures the Case of AES PDF . The Cryptographers Track at RSA Conference 2006 . doi  10.100711605805_1 . Archived PDF from the original on 20060619 . Retrieved 20081102 .  Dhiman Saha Debdeep Mukhopadhyay Dipanwita RoyChowdhury . A Diagonal Fault Attack on the Advanced Encryption Standard PDF . IACR Cryptology ePrint Archive . Archived PDF from the original on 22 December 2009 . Retrieved 20091208 .  Endre Bangerter David Gullasch  Stephan Krenn 2010. Cache Games  Bringing AccessBased Cache Attacks on AES to Practice PDF . IACR Cryptology ePrint Archive . Archived PDF from the original on 20101214.  Breaking AES128 in realtime no ciphertext required . Hacker News. Archived from the original on 20111003 . Retrieved 20121223 .  Ashokkumar C. Giri Ravi Prakash Menezes Bernard. Highly Efficient Algorithms for AES Key Retrieval in Cache Access Attacks . 2016 IEEE European Symposium on Security and Privacy EuroSP. Saarbruecken Germany. pp. 261 275. doi  10.1109EuroSP.2016.29 .  Mowery Keaton Keelveedhi Sriram Shacham Hovav 19 October 2012. Are AES x86 cache timing attacks still feasible PDF . CCS12 the ACM Conference on Computer and Communications Security. Raleigh North Carolina USA. pp. 19 24. doi  10.11452381913.2381917 . Archived from the original PDF on 20170809.  Securing the Enterprise with Intel AESNI PDF . Intel Corporation . Archived PDF from the original on 20130331 . Retrieved 20170726 .  Bonnetain Xavier NayaPlasencia María Schrottenloher André 11 June 2019. Quantum Security Analysis of AES . IACR Transactions on Symmetric Cryptology . 2019 2 55 93. doi  10.13154tosc.v2019.i2.5593 .  OShea Dan April 26 2022. AES256 joins the quantum resistance . Fierce Electronics . Retrieved September 26 2023 .  a b NSTISSP No. 11 Revised Fact Sheet National Information Assurance Acquisition Policy PDF . Archived from the original PDF on 20120421 . Retrieved 20120529 .  NIST.gov  Computer Security Division  Computer Security Resource Center . Csrc.nist.gov. Archived from the original on 20130102 . Retrieved 20121223 .  Validated FIPS 1401 and FIPS 1402 Cryptographic Modules . Archived from the original on 20141226 . Retrieved 20140626 .  a b OpenSSL opensslopenssl.org. OpenSSLs Notes about FIPS certification . Openssl.org. Archived from the original on 20130102 . Retrieved 20121223 .  Schneier Bruce Kelsey John Whiting Doug Wagner David Hall Chris Ferguson Niels 19990201. Performance Comparisons of the AES submissions PDF . Archived PDF from the original on 20110622 . Retrieved 20101228 .  AMD Ryzen 7 1700X Review .  Intel  Advanced Encryption Standard AES New Instructions Set PDF . May 2010. Courtois Nicolas Pieprzyk Josef 2003. Cryptanalysis of Block Ciphers with Overdefined Systems of Equations . In Zheng Yuliang ed.. Advances in Cryptology  ASIACRYPT 2002 8th International Conference on the Theory and Application of Cryptology and Information Security Queenstown New Zealand December 15 2002 Proceedings . Springer. pp. 268 287. ISBN 9783540361787 . Daemen Joan Rijmen Vincent 2002. The Design of Rijndael AES  The Advanced Encryption Standard . Springer. ISBN 9783540425809 . Paar Christof Pelzl Jan 2009. Understanding Cryptography A Textbook for Students and Practitioners . Springer. pp. 87 122. ISBN 9783642041013 . alternate link companion web site contains online lectures on AES External links  edit  256bit key  128bit block  AES . Cryptography  256 bit Ciphers Reference source code and submissions to international cryptographic designs contests . EmbeddedSW. Advanced Encryption Standard AES PDF . Federal Information Processing Standards . 26 November 2001. doi  10.6028NIST.FIPS.197 . 197. AES algorithm archive information  old unmaintained Part 3 Block ciphers PDF . Information technology  Security techniques  Encryption algorithms 2nd ed.. ISO. 20101215. ISOIEC 1803332010E. Archived PDF from the original on 20221009. Animation of Rijndael  AES deeply explained and animated using Flash by Enrique Zabala  University ORT  Montevideo  Uruguay. This animation in English Spanish and German is also part of CrypTool 1 menu Indiv. Procedures  Visualization of Algorithms  AES. HTML5 Animation of Rijndael  Same Animation as above made in HTML5. v t e Block ciphers  security summary  Common algorithms AES Blowfish DES  internal mechanics  Triple DES  Serpent SM4 Twofish Less common algorithms ARIA Camellia CAST128 GOST IDEA LEA RC5 RC6 SEED Skipjack TEA XTEA Other algorithms 3Way Adiantum Akelarre Anubis Ascon BaseKing BassOmatic BATON BEAR and LION CAST256 Chiasmus CIKS1 CIPHERUNICORNA CIPHERUNICORNE CLEFIA CMEA Cobra COCONUT98 Crab CryptomeriaC2 CRYPTON CSCipher DEAL DESX DFC E2 FEAL FEAM FROG GDES Grand Cru Hasty Pudding cipher Hierocrypt ICE IDEA NXT Intel Cascade Cipher Iraqi Kalyna KASUMI KeeLoq KHAZAD Khufu and Khafre KNCipher Kuznyechik LadderDES LOKI  97  8991  Lucifer M6 M8 MacGuffin Madryga MAGENTA MARS Mercy MESH MISTY1 MMB MULTI2 MultiSwap New Data Seal NewDES Nimbus NOEKEON NUSH PRESENT Prince Q RC2 REDOC Red Pike S1 SAFER SAVILLE SC2000 SHACAL SHARK Simon Speck SpectrH64 Square SXALMBAL Threefish Treyfer UES xmx XXTEA Zodiac Design Feistel network Key schedule LaiMassey scheme Product cipher Sbox Pbox SPN Confusion and diffusion Round Avalanche effect Block size Key size Key whitening  Whitening transformation  Attack  cryptanalysis  Bruteforce  EFF DES cracker  MITM Biclique attack 3subset MITM attack Linear  Pilingup lemma  Differential Impossible Truncated Higherorder Differentiallinear Distinguishing  Knownkey  IntegralSquare Boomerang Mod n Relatedkey Slide Rotational Sidechannel Timing Powermonitoring Electromagnetic Acoustic Differentialfault XSL Interpolation Partitioning Rubberhose Blackbag Davies Rebound Weak key Tau Chisquare Timememorydata tradeoff Standardization AES process CRYPTREC NESSIE NSA Suite B CNSA Utilization Initialization vector Mode of operation Padding v t e Cryptography General History of cryptography Outline of cryptography Classical cipher Cryptographic protocol Authentication protocol Cryptographic primitive Cryptanalysis Cryptocurrency Cryptosystem Cryptographic nonce Cryptovirology Hash function Cryptographic hash function Key derivation function Secure Hash Algorithms Digital signature Kleptography Key cryptography Key exchange Key generator Key schedule Key stretching Keygen Machines Cryptojacking malware Ransomware Random number generation Cryptographically secure pseudorandom number generator CSPRNG Pseudorandom noise PRN Secure channel Insecure channel Subliminal channel Encryption Decryption Endtoend encryption Harvest now decrypt later Informationtheoretic security Plaintext Codetext Ciphertext Shared secret Trapdoor function Trusted timestamping Keybased routing Onion routing Garlic routing Kademlia Mix network Mathematics Cryptographic hash function Block cipher Stream cipher Symmetrickey algorithm Authenticated encryption Publickey cryptography Quantum key distribution Quantum cryptography Postquantum cryptography Message authentication code Random numbers Steganography Category