Cyber attack where any code can be run Remote code execution redirects here. For the science fiction novel see RCE  Remote Code Execution . This article needs additional citations for verification . Please help improve this article by adding citations to reliable sources . Unsourced material may be challenged and removed. Find sources Arbitrary code execution  news  newspapers  books  scholar  JSTOR  March 2019   Learn how and when to remove this message  In computer security  arbitrary code execution  ACE  is an attackers ability to run any commands or code of the attackers choice on a target machine or in a target process .  1  An arbitrary code execution vulnerability is a security flaw in software or hardware allowing arbitrary code execution. A program that is designed to exploit such a vulnerability is called an arbitrary code execution exploit . The ability to trigger arbitrary code execution over a network especially via a widearea network such as the Internet is often referred to as remote code execution  RCE or RCX . Arbitrary code execution signifies that if someone sends a specially designed set of data to a computer they can make it do whatever they want. Even though this particular weakness may not cause actual problems in the real world researchers have discussed whether it suggests a natural tendency for computers to have vulnerabilities that allow unauthorized code execution.  2  Vulnerability types  edit  There are a number of classes of vulnerability that can lead to an attackers ability to execute arbitrary commands or code. For example Memory safety vulnerabilities such as buffer overflows or overreads . Deserialization vulnerabilities  3  Type confusion vulnerabilities  4   5  GNU ldd arbitrary code execution  6  Methods  edit  Arbitrary code execution is commonly achieved through control over the instruction pointer such as a jump or a branch  of a running process . The instruction pointer points to the next instruction in the process that will be executed. Control over the value of the instruction pointer therefore gives control over which instruction is executed next. In order to execute arbitrary code many exploits inject code into the process for example by sending input to it which gets stored in an input buffer in RAM  and use a vulnerability to change the instruction pointer to have it point to the injected code. The injected code will then automatically get executed. This type of attack exploits the fact that most computers which use a Von Neumann architecture  do not make a general distinction between code and data   7   8  so that malicious code can be camouflaged as harmless input data. Many newer CPUs have mechanisms to make this harder such as a noexecute bit .  9   10  Combining with privilege escalation  edit  Main article Privilege escalation On its own an arbitrary code execution exploit will give the attacker the same privileges as the target process that is vulnerable.  11  For example if exploiting a flaw in a web browser  an attacker could act as the user performing actions such as modifying personal computer files or accessing banking information but would not be able to perform systemlevel actions unless the user in question also had that access. To work around this once an attacker can execute arbitrary code on a target there is often an attempt at a privilege escalation exploit in order to gain additional control. This may involve the kernel itself or an account such as Administrator SYSTEM or root. With or without this enhanced control exploits have the potential to do severe damage or turn the computer into a zombie but privilege escalation helps with hiding the attack from the legitimate administrator of the system. Examples  edit  Retrogaming hobbyists have managed to find vulnerabilities in classic video games that allow them to execute arbitrary code usually using a precise sequence of button inputs in a toolassisted superplay to cause a buffer overflow  allowing them to write to protected memory . At Awesome Games Done Quick 2014  a group of speedrunning enthusiasts managed to code and run versions of the games Pong  Snake and Super Mario Bros in a copy of Super Mario World  12  by utilizing an outofbounds read of a function pointer that points to a user controlled buffer to execute arbitrary code. On June 12 2018 Bosnian security researcher JeanYves Avenard of Mozilla discovered an ACE vulnerability in Windows 10 .  13  On May 1 2018 a security researcher discovered an ACE vulnerability in the 7Zip file archiver .  14  PHP has been the subject of numerous ACE vulnerabilities.  15   16   17  On December 9 2021 a RCE vulnerability called  Log4Shell  was discovered in popular logging framework Log4j  affecting many services including iCloud  Minecraft Java Edition and Steam  and characterized as the single biggest most critical vulnerability of the last decade.  18   19  See also  edit  Computer security BlueKeep Follina security vulnerability References  edit   Team KernelCare 25 January 2021. Remote code execution attack what it is how to protect your systems . blog.kernelcare.com . Retrieved 20210922 .  selfpublished source   Johnson Pontus 2021. Intrinsic Propensity for Vulnerability in Computers Arbitrary Code Execution in the Universal Turing Machine Preprint. arXiv  2105.02124 .  Deserialization of untrusted data . owasp.org .  Understanding type confusion vulnerabilities CVE20150336 . microsoft.com . 18 June 2015.  Exploiting CVE201819134 remote code execution through type confusion in Ghostscript . lgtm.com . 5 February 2019.  LDD arbitrary code execution .  Gilreath William F. Laplante Phillip A. 2003. Evolution of Instruction Sets. Computer Architecture A Minimalist Perspective . pp. 23 32. doi  10.10079781461502371_4 . ISBN 9781461349808 .  Reilly Edwin D. 2003. Milestones in Computer Science and Information Technology . Greenwood Publishing Group. p. 245 . ISBN 9781573565219 .  Tech Insight Execute Disable Bit XDBit PDF . Toshiba Polska . 2005. Archived from the original PDF on 20181031 . Retrieved 20181031 .  AMD has you covered PDF . AMD . 2012. Archived from the original PDF on Mar 5 2019.  Winterfeld Steve 2013. Offensive Tactics and Procedures. The Basics of Cyber Warfare . pp. 67 82. doi  10.1016B9780124047372.000057 . ISBN 9780124047372 .  Orland Kyle 14 January 2014. How an emulatorfueled robot reprogrammed Super Mario World on the fly . Ars Technica . Retrieved 27 July 2016 .  Microsoft Windows CVE20188213 Arbitrary Code Execution Vulnerability . Symantec . Archived from the original on October 31 2018 . Retrieved 20181031 .  A Vulnerability in 7Zip Could Allow for Arbitrary Code Execution . New York State Office of Information Technology Services . Archived from the original on 20210815 . Retrieved 20181031 .  NVD  CVE201712934 . nvd.nist.gov . Retrieved 20181031 .  File Operation Induced Unserialization via the phar Stream Wrapper PDF . Secarma Labs . 2018.  NVD  CVE201712933 . nvd.nist.gov . Retrieved 20181031 .  Zeroday in ubiquitous Log4j tool poses a grave threat to the Internet . Ars Technica . December 9 2021 . Retrieved December 11 2021 .  Recently uncovered software flaw most critical vulnerability of the last decade  . The Guardian . 11 December 2021 . Retrieved December 11 2021 . Further reading  edit  Sommestad Teodor Holm Hannes Ekstedt Mathias June 2012. Estimates of success rates of remote arbitrary code execution attacks. Information Management  Computer Security . 20 2 107 122. doi  10.110809685221211235625 . Sun Enbo Han Jiaxuan Li Yiquan Huang Cheng 2 July 2024. A Packet ContentOriented Remote Code Execution Attack Payload Detection Model . Future Internet . 16 7 235. doi  10.3390fi16070235 . Jancewicz Russell J. Kiayias Aggelos Michel Laurent D. Russell Alexander C. Shvartsman Alexander A. 2013. Malicious takeover of voting systems Arbitrary code execution on optical scan voting terminals. Proceedings of the 28th Annual ACM Symposium on Applied Computing . pp. 1816 1823. doi  10.11452480362.2480702 . ISBN 9781450316569 . v t e Information security Related security categories Computer security Automotive security Cybercrime Cybersex trafficking Computer fraud Cybergeddon Cyberterrorism Cyberwarfare Electromagnetic warfare Information warfare Internet security Mobile security Network security Copy protection Digital rights management vectorial version Threats Adware Advanced persistent threat Arbitrary code execution Backdoors Bombs Fork Logic Time Zip Hardware backdoors Code injection Crimeware Crosssite scripting Crosssite leaks DOM clobbering History sniffing Cryptojacking Botnets Data breach Driveby download Browser Helper Objects Viruses Data scraping Denialofservice attack Eavesdropping Email fraud Email spoofing Exploits Fraudulent dialers Hacktivism Infostealer Insecure direct object reference Keystroke loggers Malware Payload Phishing Voice Polymorphic engine Privilege escalation Ransomware Rootkits Scareware Shellcode Spamming Social engineering Spyware Software bugs Trojan horses Hardware Trojans Remote access trojans Vulnerability Web shells Wiper Worms SQL injection Rogue security software Zombie Defenses Application security Secure coding Secure by default Secure by design Misuse case Computer access control Authentication Multifactor authentication Authorization Computer security software Antivirus software Securityfocused operating system Datacentric security Obfuscation software Data masking Encryption Firewall Intrusion detection system Hostbased intrusion detection system HIDS Anomaly detection Information security management Information risk management Security information and event management SIEM Runtime application selfprotection Site isolation